# Generated by Django 3.2.2 on 2021-05-18 11:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import playlist_creation.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UUIDModel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('uuidmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='playlist_creation.uuidmodel')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('source_providers', models.JSONField(default=dict)),
                ('from_date', models.DateField(default=None, null=True)),
                ('to_date', models.DateField(default=None, null=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'Initiated'), (1, 'Started creation'), (2, 'Finished creation')], default=0)),
                ('provider_urls', models.JSONField(default=dict)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='playlists', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
            bases=('playlist_creation.uuidmodel', models.Model),
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('uuidmodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='playlist_creation.uuidmodel')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('artist', models.CharField(max_length=256)),
                ('title', models.CharField(max_length=256)),
                ('provider_urls', models.JSONField(default=dict)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
            bases=('playlist_creation.uuidmodel', models.Model),
        ),
        migrations.CreateModel(
            name='TrackPlaylist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_provider', models.CharField(choices=[(playlist_creation.models.MusicProviders['SPOTIFY'], 'spotify'), (playlist_creation.models.MusicProviders['LASTFM'], 'last.fm')], max_length=256)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playlist_creation.playlist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='playlist_creation.track')),
            ],
            options={
                'unique_together': {('track', 'playlist')},
            },
        ),
        migrations.AddField(
            model_name='track',
            name='playlists',
            field=models.ManyToManyField(related_name='tracks', through='playlist_creation.TrackPlaylist', to='playlist_creation.Playlist'),
        ),
    ]
